# to_sは整数型->文字列型へ変換するメゾッド
# 私の年齢は(文字列型) 23(整数型) 歳です。(文字列型)
puts '私の年齢は' + 23.to_s + '歳です。'

# to_iは文字列型->整数型へ変換するメゾッド
# 100(文字列型) 400(整数型)
puts '100'.to_i + 400

# lengthは、文字列型の文字数を数えるメソッドです。
puts 'こんにちは'.length

# reverseは文字列型を逆にするメゾッドです。
puts 'こんにちは'.reverse

# include?は引数に指定した文字列が含まれているかどうかを調べるメソッドです。
# 正しい(含まれる)とTrue 逆に含まれていない場合はfalse
puts "WEBCAMPでプログラミング学習".include?("WEBCAMP")

# methodsは使用可能なメソッド一覧を表示できるメソッドです。
# puts 'こんにちは'.methods

# 再代入
webcamp = 'プログラミング学習'
puts webcamp

webcamp = 'オンラインプログラミング学習'
puts webcamp

# 大文字で始まる場合は、「定数」と呼ばれ、定数は後から書き換えることができない
# Pi = 3.14
# puts Pi

# Pi = 100
# puts Pi

# 変数展開は元の変数がどのような型であっても文字列型に変換くれる "#{変数}" ダブルクォーテーションで括った場合のみ機能
name = '纐纈'
weight = 70
puts name + 'の体重は' + weight.to_s + 'kgです。'
# +による連結に比べてコード量が減り、変数の型を気にしなくていい
puts "#{name}の体重は#{weight}kgです。"